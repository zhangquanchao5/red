<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.red.dao.UserHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.red.domain.UserHistory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="red_id" property="redId" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, red_id, mobile, money, type, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.red.domain.UserHistory" useGeneratedKeys="true" keyProperty="id" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_history (id, red_id, mobile, 
      money, type, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{redId,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, 
      #{money,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.red.domain.UserHistory" useGeneratedKeys="true" keyProperty="id" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="redId != null" >
        red_id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="redId != null" >
        #{redId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.red.domain.UserHistory" >
    update user_history
    <set >
      <if test="redId != null" >
        red_id = #{redId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.red.domain.UserHistory" >
    update user_history
    set red_id = #{redId,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findRedIdCount" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select sum(money)
    from user_history
    where red_id = #{redId,jdbcType=INTEGER}
  </select>


  <select id="findPageResponse" parameterType="com.red.common.apibean.UserHistoryPageReq" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_history uh
    where 1 = 1
    <if test="mobile != null">
      and uh.mobile=#{mobile}
    </if>
    <if test="orgId != null">
      and EXISTS (select 1 from org_rule rule where rule.id=uh.red_id and rule.org_id=#{orgId})
    </if>
    <if test="redId != null">
      and uh.red_id=#{redId}
    </if>
    order by uh.create_time DESC
    limit #{pageStart},#{currentSize}
  </select>

  <select id="findPageCount" parameterType="com.red.common.apibean.UserHistoryPageReq" resultType="java.lang.Integer">
    select
    count(1)
    from user_history uh
    where uh.mobile=#{mobile}
    <if test="orgId != null">
      and EXISTS (select 1 from org_rule rule where rule.id=uh.red_id and rule.org_id=#{orgId})
    </if>
    <if test="redId != null">
      and uh.red_id=#{redId}
    </if>

  </select>


  <select id="findPhoneRedIdCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select count(1)
    from user_history
    where red_id = #{redId,jdbcType=INTEGER} and mobile=#{mobile} and type=2
  </select>

</mapper>